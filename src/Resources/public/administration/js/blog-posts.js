!function(t){var e={};function o(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=e,o.d=function(t,e,s){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(s,n,function(e){return t[e]}.bind(null,n));return s},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="/bundles/blogposts/",o(o.s="hot+")}({Mfo2:function(t){t.exports=JSON.parse('{"blog-posts":{"general":{"mainMenuItemList":"Blog-Posts","descriptionTextModule":"Blog-Posts`"},"list":{"titleColumn":"Title","descColumn":"Description","titleSaveSuccess":"Success","messageSaveSuccess":"Details updated successfully","addButtonText":"Create new post","columnName":"Name","columnCreatedDate":"Publish Date","columnStatus":"Status"},"detail":{"cancelButtonText":"Cancel","saveButtonText":"Save","nameLabel":"Text","statusLabel":"Status","errorTitle":"Error","descriptionLabel":"Description","createdDate":"Publish Date","deleteButtonText":"Delete","createdDatePlaceholder":"Current datetime will be stored by default","updatedDate":"Update Date"}}}')},Ndq4:function(t){t.exports=JSON.parse('{"blog-posts":{"general":{"mainMenuItemList":"Blog-Posts","descriptionTextModule":"Blog-Posts`"},"list":{"titleColumn":"Title","descColumn":"Description","titleSaveSuccess":"Success","messageSaveSuccess":"Details updated successfully","addButtonText":"Create new post","columnName":"Name","columnCreatedDate":"Publish Date","columnStatus":"Status"},"detail":{"cancelButtonText":"Cancel","saveButtonText":"Save","nameLabel":"Text","statusLabel":"Status","errorTitle":"Error","descriptionLabel":"Description","createdDate":"Publish Date","deleteButtonText":"Delete","createdDatePlaceholder":"Current datetime will be stored by default","updatedDate":"Update Date"}}}')},PjDW:function(t,e){Shopware.Component.extend("blog-posts-create","blog-posts-detail",{methods:{getBundle:function(){this.posts=this.repository.create(Shopware.Context.api)},onClickSave:function(){var t=this;this.isLoading=!0,this.repository.save(this.posts,Shopware.Context.api).then((function(){t.isLoading=!1,t.$router.push({name:"blog.posts.detail",params:{id:t.posts.id}})})).catch((function(e){t.isLoading=!1,console.log(e)}))}}})},"hot+":function(t,e,o){"use strict";o.r(e);var s=Shopware.Component,n=Shopware.Data.Criteria;s.register("blog-posts-list",{template:'{% block blog_posts_list %}\n    <sw-page class="blog-posts-list">\n        {% block blog_posts_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            <sw-button variant="primary" :routerLink="{ name: \'blog.posts.create\' }">\n                {{ $tc(\'blog-posts.list.addButtonText\') }}\n            </sw-button>\n        </template>\n        {% endblock %}\n        \n        <template #content>\n            {% block blog_posts_list_content %}\n            <sw-entity-listing\n                v-if="posts"\n                :items="posts"\n                :repository="repository"\n                :showSelection="false"\n                :columns="columns"\n                detailRoute="blog.posts.detail">\n            </sw-entity-listing>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}',inject:["repositoryFactory"],data:function(){return{repository:null,posts:null}},metaInfo:function(){return{title:this.$createTitle()}},computed:{columns:function(){return this.getColumns()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var t=this;this.repository=this.repositoryFactory.create("blog_posts",null,{version:1}),this.repository.search(new n,Shopware.Context.api).then((function(e){t.posts=e}))},getPosts:function(){var t=this;this.repository.get(new n,Shopware.Context.api).then((function(e){t.posts=e}))},getColumns:function(){return[{property:"name",label:this.$tc("blog-posts.list.columnName"),routerLink:"blog.posts.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"created_at",label:this.$tc("blog-posts.list.columnCreatedDate"),allowResize:!0},{property:"active",label:this.$tc("blog-posts.list.columnStatus"),allowResize:!0}]}}});Shopware.Component.register("blog-posts-detail",{template:'{% block blog_posts_detail %}\n    <sw-page class="blog-posts-detail">\n        <template #smart-bar-actions>\n            <sw-button :routerLink="{ name: \'blog.posts.list\' }">\n                {{ $tc(\'blog-posts.detail.cancelButtonText\') }}\n            </sw-button>\n            \n            <sw-button-process \n                :isLoading="isLoading"\n                :processSuccess="processSuccess"\n                variant="primary"\n                @process-finish="saveFinish"\n                @click="onClickSave">\n                {{ $tc(\'blog-posts.detail.saveButtonText\') }}\n            </sw-button-process>\n            <sw-button @click="onClickDelete">\n                {{ $tc(\'blog-posts.detail.deleteButtonText\') }}\n            </sw-button>\n        </template>\n        \n        <template #content>\n            <sw-card-view>\n                <sw-card v-if="posts" :isLoading="isLoading">\n                    <sw-field v-model="posts.name" :label="$tc(\'blog-posts.detail.nameLabel\')"></sw-field>\n                    <sw-text-editor v-model="posts.description" :label="$tc(\'blog-posts.detail.descriptionLabel\')"></sw-text-editor>\n                    <sw-boolean-radio-group\n                        v-model="posts.active"\n                        :label="$tc(\'blog-posts.detail.statusLabel\')"\n                        labelOptionTrue="Published"\n                        labelOptionFalse="Draft"> \n                    </sw-boolean-radio-group>\n                    <sw-field \n                        v-model="posts.created_at" \n                        :disabled="true"\n                        :placeholder="$tc(\'blog-posts.detail.createdDatePlaceholder\')" \n                        :label="$tc(\'blog-posts.detail.createdDate\')">\n                    </sw-field>\n                    <sw-field \n                        v-model="posts.updated_at" \n                        :disabled="true"\n                        :placeholder="$tc(\'blog-posts.detail.createdDatePlaceholder\')" \n                        :label="$tc(\'blog-posts.detail.updatedDate\')">\n                    </sw-field>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}',inject:["repositoryFactory"],metaInfo:function(){return{title:this.$createTitle()}},props:{postId:{required:!0,type:String}},data:function(){return{posts:null,isLoading:!1,processSuccess:!1,repository:null}},computed:{options:function(){return[{value:!1,name:"status"}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.repository=this.repositoryFactory.create("blog_posts"),this.getBundle()},getBundle:function(){var t=this;this.postId=this.$route.params.id,this.repository.get(this.postId,Shopware.Context.api).then((function(e){t.posts=e}))},onClickSave:function(){var t=this;this.isLoading=!0,this.repository.save(this.posts,Shopware.Context.api).then((function(){t.getBundle(),t.isLoading=!1,t.processSucess=!0})).catch((function(e){t.isLoading=!1,console.log(e)}))},saveFinish:function(){this.processSuccess=!1},onClickDelete:function(){var t=this;this.repository.delete(this.postId,Shopware.Context.api).then((function(){t.$router.push({name:"blog.posts.list"})})).catch((function(t){console.log(t)}))}}});o("PjDW");var a=o("Ndq4"),i=o("Mfo2");Shopware.Module.register("blog-posts",{type:"core",name:"Blog",title:"blog-posts.general.mainMenuItemList",description:"blog-posts.general.descriptionTextModule",color:"#ff3d58",icon:"default-shopping-paper-bag-product",snippets:{"en-GB":a,"de-De":i},routes:{list:{component:"blog-posts-list",path:"list"},detail:{component:"blog-posts-detail",path:"detail/:id",meta:{parentPath:"blog.posts.list"}},create:{component:"blog-posts-create",path:"create",meta:{parentPath:"blog.posts.list"}}},navigation:[{label:"blog-posts.general.mainMenuItemList",color:"#ff3d58",path:"blog.posts.list",icon:"default-shopping-paper-bag-product",position:99}]})}});